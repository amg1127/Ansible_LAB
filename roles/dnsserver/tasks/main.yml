---
# TODO: IP addresses are hardcoded. Must get the correct data from variables defined by Vagrant
- name: REMIND
  debug:
    msg: "IP addresses are hardcoded. Must get the correct data from variables defined by Vagrant"
- name: DNS server installation and configuration
  block:
  - name: Install DNS Server
    yum:
      name: "bind,bind-utils,bind-chroot"
      state: present
    notify:
    - Restart DNS server
  - name: Configure DNS Server to listen to and reply from all addresses
    replace:
      path: /etc/named.conf
      regexp: '^(\s*(listen-on(|-v6)\s+port\s+53|allow-query)\s*\{)[^\}]+\};\s*$'
      replace: '\1 any; };'
      validate: /usr/sbin/named-checkconf %s
    notify:
    - Restart DNS server
  - name: Write zone definition in /etc/named.conf
    blockinfile:
      block: "{{ lookup('template', 'named.conf.snippet.j2') }}"
      insertafter: EOF
      path: /etc/named.conf
      validate: /usr/sbin/named-checkconf %s
    notify:
    - Restart DNS server
  - name: Write example.com zone file into /var/named/example.com.db
    template:
      src: domainzone.db.j2
      dest: "/var/named/{{ example_dns_name }}.db"
      owner: root
      group: named
      mode: "0640"
      validate: "/usr/sbin/named-checkzone '{{ example_dns_name }}.' %s"
    notify:
    - Restart DNS server
  - name: Write in-addr.arpa zone files into /var/named/*.rev4
    template:
      src: "net_{{ item.number }}.rev4.j2"
      dest: "/var/named/{{ example_dns_name }}.{{ item.number }}.rev4"
      owner: root
      group: named
      mode: "0640"
      validate: "/usr/sbin/named-checkzone '{{ item.zone }}' %s"
    with_items:
    - { number: "0",  zone: "{{ example_hosts['gateway']['addr4net0']  | ipaddr('revdns') | regex_replace('^[0-9]+\\.', '') }}" }
    - { number: "32", zone: "{{ example_hosts['gateway']['addr4net32'] | ipaddr('revdns') | regex_replace('^[0-9]+\\.', '') }}" }
    notify:
    - Restart DNS server
  - name: Write ip6.arpa zone files into /var/named/*.rev6
    template:
      src: "net_{{ item.number }}.rev6.j2"
      dest: "/var/named/{{ example_dns_name }}.{{ item.number }}.rev6"
      owner: root
      group: named
      mode: "0640"
      validate: "/usr/sbin/named-checkzone '{{ item.zone }}' %s"
    with_items:
    - { number: "0",  zone: "{{ example_hosts['gateway']['addr6net0']  | ipaddr('revdns') | regex_replace('^([0-9a-fA-F]\\.){16,16}', '') }}" }
    - { number: "32", zone: "{{ example_hosts['gateway']['addr6net32'] | ipaddr('revdns') | regex_replace('^([0-9a-fA-F]\\.){16,16}', '') }}" }
    notify:
    - Restart DNS server
  - name: Open DNS ports in firewalld
    firewalld:
      permanent: yes
      immediate: yes
      service: dns
      zone: public
      state: enabled
  - name: Ensure the DNS server is running
    service:
      name: named-chroot.service
      enabled: yes
      state: started
  - meta: flush_handlers
  tags: dnssetup

