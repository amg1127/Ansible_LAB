---
- name: CA deployment
  block:
  - name: Install cryptography packages
    yum:
      name: "python2-cryptography"
      state: present
  - name: Load variables from step-1 role main file
    include_vars: roles/common-step1/vars/main.yml
  - name: Load passwords from vault file
    include_vars: vaultfile.yml
  - name: Ensure that directories used for CA storage exist
    file:
      path: "{{ item }}"
      state: directory
      mode: "0700"
    with_items:
      - "{{ certauthorityRoot }}"
      - "{{ certauthorityRoot }}/certs"
      - "{{ certauthorityRoot }}/private"
  - name: Generate a private key for CA deployment
    openssl_privatekey:
      mode: "0600"
      cipher: auto
      passphrase: "{{ certauthorityPrivateKeyPassword }}"
      path: "{{ certauthorityPrivateKeyPath }}"
      size: 4096
      type: RSA
      state: present
    no_log: yes
  - name: Generate a certificate request for CA deployment
    openssl_csr:
      path: "{{ certauthorityCSRPath }}"
      digest: sha512
      privatekey_path: "{{ certauthorityPrivateKeyPath }}"
      privatekey_passphrase: "{{ certauthorityPrivateKeyPassword }}"
      CN: "{{ example_dns_name }} Certificate Authority"
      C: "NZ"
      ST: "Auckland"
      L: "Auckland"
      O: "AMG1127"
      OU: "Computer"
      use_common_name_for_san: no
      state: present
  - name: Generate a certificate authority
    openssl_certificate:
      mode: "0644"
      provider: selfsigned
      path: "{{ certauthorityCertificatePath }}"
      csr_path: "{{ certauthorityCSRPath }}"
      privatekey_path: "{{ certauthorityPrivateKeyPath }}"
      privatekey_passphrase: "{{ certauthorityPrivateKeyPassword }}"
      selfsigned_not_before: 20190818172000Z 
      selfsigned_not_after: 20380119031408Z
      selfsigned_digest: sha512
      state: present
  - name: Get the generated certificate authority PEM file
    slurp:
      src: "{{ certauthorityCertificatePath }}"
    register: certauthorityfile_b64
  - name: Deploy certificate authority PEM file to the directory containing trusted CA files
    copy:
      content: "{{ certauthorityfile_b64['content'] | b64decode }}"
      dest: "{{ certauthorityTrustedCARoot }}/{{ example_dns_name }}_CA.crt"
      checksum: "{{ certauthorityfile_b64['content'] | b64decode | hash('sha1') }}"
    delegate_to: "{{ item }}"
    with_items: "{{ groups['all'] }}"
    notify: Update CA trust
  - name: Store the inventory hostname of the server who are assigned the certauthority role
    command:
      argv:
        - /usr/bin/cat
      stdin: "{{ inventory_hostname }}"
    changed_when: no
    register: certauthority_hostname
  tags: certauthoritysetup

