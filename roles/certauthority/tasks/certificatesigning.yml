---
- name: Get the generated CSR file
  slurp:
    src: "{{ item.CSRInputFile }}"
  register: itemcsrfile_b64
- name: Create a tempfile in the server with 'certauthority' role assignment
  tempfile:
    state: file
    suffix: _cert.csr
  register: cert_csrfile
  changed_when: false
  delegate_to: "{{ item.CAinventory_hostname }}"
- name: Create another tempfile in the server with 'certauthority' role assignment
  tempfile:
    state: file
    suffix: _cert.crt
  register: cert_certfile
  changed_when: false
  delegate_to: "{{ item.CAinventory_hostname }}"
- name: Deploy CSR file to the server with 'certauthority' role assignment
  copy:
    content: "{{ itemcsrfile_b64['content'] | b64decode }}"
    dest: "{{ cert_csrfile.path }}"
    checksum: "{{ itemcsrfile_b64['content'] | b64decode | hash('sha1') }}"
  delegate_to: "{{ item.CAinventory_hostname }}"
- name: Sign the CSR in the server with 'certauthority' role assignment
  openssl_certificate:
    mode: "0644"
    provider: ownca
    path: "{{ cert_certfile.path }}"
    csr_path: "{{ cert_csrfile.path }}"
    ownca_path: "{{ certauthorityCertificatePath }}"
    ownca_privatekey_path: "{{ certauthorityPrivateKeyPath }}"
    ownca_privatekey_passphrase: "{{ certauthorityPrivateKeyPassword }}"
    ownca_not_after: "+365d"
    state: present
  delegate_to: "{{ item.CAinventory_hostname }}"
- name: Get the generated certificate file
  slurp:
    src: "{{ cert_certfile.path }}"
  register: cert_certfile_b64
  delegate_to: "{{ item.CAinventory_hostname }}"
- name: Store the generated OpenLDAP certificate at the correct location
  copy:
    content: "{{ cert_certfile_b64['content'] | b64decode }}"
    dest: "{{ item.CertificateOutputFile }}"
    checksum: "{{ cert_certfile_b64['content'] | b64decode | hash('sha1') }}"

