---
- name: LDAP server installation and configuration
  block:
  - name: Load passwords from vault file
    include_vars: vaultfile.yml
  - name: Install OpenLDAP client, server and Python LDAP libraries
    yum:
      name: "openldap-servers,openldap-clients,python-ldap"
      state: present
  - name: Ensure the OpenLDAP server is running
    service:
      name: slapd.service
      enabled: yes
      state: started
  - name: Open LDAP ports in firewalld
    firewalld:
      permanent: yes
      immediate: yes
      service: "{{ item }}"
      zone: public
      state: enabled
    with_items:
      - ldap
      - ldaps
  - name: Load needed schemas
    command:
      chdir: /etc/openldap/schema
      argv:
        - /usr/bin/ldapadd
        - -H
        - ldapi:///
        - -Y
        - EXTERNAL
        - -f
        - "{{ item }}.ldif"
    register: ldapaddout
    changed_when: ldapaddout.rc != 80
    failed_when: ldapaddout.rc != 0 and ldapaddout.rc != 80
    with_items:
      - core
      - cosine
      - nis
  - name: Modify default root OpenLDAP database
    ldap_attr:
      dn: olcDatabase={2}hdb,cn=config
      name: "{{ item.key }}"
      values: "{{ item.value }}"
      state: exact
    with_dict:
      olcSuffix: "{{ example_ldap_name }}"
      olcRootDN: "gidNumber=0+uidNumber=0,cn=peercred,cn=external,cn=auth"
# https://stackoverflow.com/questions/3790454/how-do-i-break-a-string-over-multiple-lines
      olcAccess:
        - >-
          {0}to attrs=userPassword
          by self write
          by anonymous auth
          by dn.exact="cn={{ LDAPAdminUserName }},{{ example_ldap_name }}" write
          by * none
        - >-
          {1}to attrs=shadowLastChange
          by self write
          by anonymous auth
          by dn.exact="cn={{ LDAPAdminUserName }},{{ example_ldap_name }}" write
          by * read
        - >-
          {2}to dn.subtree="{{ example_ldap_name }}"
          by anonymous auth
          by dn.exact="cn={{ LDAPAdminUserName }},{{ example_ldap_name }}" write
          by * read
        - >-
          {3}to *
          by * read
  - name: Create root container
    ldap_entry:
      dn: "{{ example_ldap_name }}"
      objectClass:
        - dcObject
        - organization
      attributes:
        o: "{{ example_dns_name }}"
      state: present
  - name: Create administrator user
    ldap_entry:
      dn: "cn={{ LDAPAdminUserName }},{{ example_ldap_name }}"
      objectClass: person
      attributes:
        cn: "{{ LDAPAdminUserName }}"
        sn: "{{ LDAPAdminUserName }}"
        userPassword: "{{ LDAPAdminPassword }}"
      state: present
  - name: Create LDAP users and groups containers
    ldap_entry:
      dn: "{{ item }},{{ example_ldap_name }}"
      objectClass: organizationalUnit
      state: present
    with_items:
      - "{{ LDAPUsersContainer }}"
      - "{{ LDAPGroupsContainer }}"
  - name: Create LDAP groups
    ldap_entry:
      dn: "cn={{ item.1 }},{{ LDAPGroupsContainer }},{{ example_ldap_name }}"
      objectClass: posixGroup
      attributes:
        cn: "{{ item.1 }}"
        gidNumber: "{{ item.0 + 10000 }}"
      state: present
    with_indexed_items:
      - "{{ NATOalphabet }}"
  - name: Create LDAP users
    ldap_entry:
      dn: "uid={{ item.1 }},{{ LDAPUsersContainer }},{{ example_ldap_name }}"
      objectClass:
        - posixAccount
        - person
      attributes:
        uid: "{{ item.1 }}"
        cn: "{{ item.1 }}"
        sn: "{{ item.1 }}"
        uidNumber: "{{ item.0 + 10000 }}"
        gidNumber: "{{ item.0 + 10000 }}"
        loginShell: "/bin/bash"
        homeDirectory: "/home/{{ item.1 }}"
        userPassword: "{{ LDAPUserPassword }}"
      state: present
    with_indexed_items:
      - "{{ NATOalphabet }}"
    no_log: yes
  - name: Configure identity mapping for EXTERNAL SASL mechanism
    ldap_attr:
      dn: "cn=config"
      name: olcAuthzRegexp
      values: >-
        {0}gidNumber=[0-9]+\+uidNumber=([0-9]+),cn=peercred,cn=external,cn=auth
        ldap:///{{ LDAPUsersContainer }},{{ example_ldap_name }}??sub?(&(objectClass=posixAccount)(uidNumber=$1))
      state: present
  tags: ldapsetup

